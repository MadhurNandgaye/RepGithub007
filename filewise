public void TriggerEmailAlertForWorkerDrop(IEnumerable<WorkerCountResult> workersWithDrop, int percentageDrop)
{
    try
    {
        // Subject for the email
        string subject = $"Worker Drop Alert - {percentageDrop}% decrease detected";

        // Build the email body in one go (HTML format)
        string emailBody = "<html><body>";
        emailBody += $"<p>Alert: We detected more than {percentageDrop}% decrease in workers.</p>";
        emailBody += $"<p>Time: {DateTime.UtcNow}</p>";
        emailBody += "<table border=\"1\" style=\"border-collapse:collapse;\">";
        emailBody += "<tr><th>Worker Type</th><th>Previous Count</th><th>Current Count</th><th>Drop (%)</th></tr>";

        foreach (var worker in workersWithDrop)
        {
            // worker is expected to have properties like WorkerType, PreviousCount, CurrentCount, DropPercentage
            emailBody += $"<tr>" +
                         $"<td>{worker.WorkerType}</td>" +
                         $"<td>{worker.PreviousCount}</td>" +
                         $"<td>{worker.CurrentCount}</td>" +
                         $"<td>{worker.DropPercentage}%</td>" +
                         $"</tr>";
        }

        emailBody += "</table>";
        emailBody += "<p>Please investigate immediately.</p>";
        emailBody += "</body></html>";

        // Send the email
        _emailService.SendEmailInHtmlFormat(
            _applicationSettings.FromEmailAddress,
            _applicationSettings.ToEmailAddress,
            subject,
            emailBody
        );

        _logger.LogInformation("Worker drop alert email triggered successfully.");
    }
    catch (Exception ex)
    {
        _logger.LogError($"Exception occurred while sending Worker Drop alert email: {ex}");
    }
}
